from django.shortcuts import get_object_or_404, render
from rest_framework import status
from django.contrib import messages
from django.db import transaction
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.permissions import IsAuthenticated
from rest_framework import generics
from exam.models import (
    # User,
    Course,
    Customer,
    CourseRegisterRecord,
    CourseEnrollment,
    Progress,
    Quiz,
    Question,
    QuizAttemptHistory
)
from exam.serializers import (
    CostumerDisplaySerializer,
    CourseDisplaySerializer,
)
from django.views.generic import (
    DetailView,
    ListView,
    TemplateView,
    FormView,
    CreateView,
    FormView,
    UpdateView,
)
from exam.forms import (
    QuestionForm,
)
from django.core.exceptions import PermissionDenied
from django.shortcuts import get_object_or_404, render, redirect
from django.utils.decorators import method_decorator
from exam.models.coremodels import *

class CreateCourseView(APIView):
    """
        view to used for creating a course instance.
        triggers with POST request.
        should be allowed for only [super admin].

        table : Course
        
        in request body:
                    title , summary 

        while creating instance :
                    slug = auto generated by pre_save()
                    title = request body
                    summary = request body
                    created_at = updated_at = models.DateTimeField(auto_now=True)
                    active = False
                    original_course = null (as it is original course itself)
                    version_number = 1
        and instance is saved
    """
    pass

class CreateReadingMaterialView(APIView):
    """
        view to create reading material inside a course.
        triggers with POST request.
        should be allowed for only [super admin].
        
        in URL : course_id  in which we are inputting the content will be passed
        
        table : UploadReadingMaterial
        
        while creating instance :
                    title = request body
                    courses = id in url
                    reading_content = request body
                    uploaded_at = updated_at = models.DateTimeField(auto_now=True, auto_now_add=False, null=True)
        and instance is saved
    """
    pass

class CreateVideoView(APIView):
    """
        view to create video inside a course.
        triggers with POST request.
        should be allowed for only [super admin].

        in URL : course_id in which we are inputting the content will be passed
        
        table :  UploadVideo
        
        while creating instance :
                    slug = auto generated by pre_save
                    courses = id in url
                    video = request body
                    summary = request body
                    uploaded_at = auto now
        and instance is saved
    """
    pass

class CreateQuizView(APIView):
    """
        view to create quiz inside a course.
        triggers with POST request.
        should be allowed for only [super admin].
        
        in URL : course_id in which we are inputting the content will be passed
        
        table : Quiz
        
        while creating instance :
                    courses = id in url
                    title = request body
                    slug = auto generated by pre_save
                    random_order = request body
                    answers_at_end = request body
                    exam_paper = t/f from request body
                    pass_mark = request body
                    created_at = updated_at = models.DateField(auto_now=True)
                    active = False by default
    """
    pass

class CreateCourseStructureForCourseView(APIView):
    """
        view is used to create instances in course structure table.
        triggers with POST request.
        should be allowed for only [super admin].
        
        in URL : course_id in which we are inputting the content will be passed
        
        table : Quiz
        
        while creating instance :
                    course = in url
                    order_number = in request body [list]
                    content_type = in request body [list]
                    content_id = in request body [list]
    """
    '''
    how will we do it :
                    first check if len of order_number = content_type = content_id list is same that is passed in request body
                    for course id passed in url , 
                    - - -
                    * * *
                    set will be filled.
    '''
    pass

class CreateQuestionView(APIView):
    """
        view to create the instance of question inside quiz
        triggers with POST request.
        in URL : course_id and quiz_id in which we are inputting the content will be passed
        while creating instance :
                    figure = request body
                    content = request body
                    explanation = request body
                    choice_order = request body
                    active = false by default
    """
    pass

class CreateChoiceView(APIView):
    """
        view to create choices in choice model for question
        triggers with POST request
        in URL : question_id in which we are inputting the content will be passed.
        while creating instance :
                    question = id in url
                    choice = request body
                    correct = request body
    """
    pass

class ActivateCourseView(APIView):
    """
        view to activate the course.
        trigger with POST request.
        in URL : course_id of selected instance.
        table : Course
        updating instance field:
                    change active from False to True
    """
    pass

class InActivateCourseView(APIView):
    """
        view to inactivate the course.
        trigger with POST request.
        in URL : course_id of selected instance.
        table : Course
        updating instance field:
                    change active from True to False        
    """
    pass

